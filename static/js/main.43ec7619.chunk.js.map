{"version":3,"sources":["EmployeeTable.js","Sort.js","Filter.js","Dashboard.js","Error.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","employees","Table","striped","bordered","hover","map","employee","index","src","picture","thumbnail","alt","name","id","value","last","first","email","phone","dateformat","Date","registered","date","dob","SORT_KEYS","DIRECTION","Sort","onChange","radios","useState","radioValue","setRadioValue","direction","setDirection","sortEmployees","sortKey","sortDirection","sortFuncs","sort","emp1","emp2","ButtonGroup","toggle","radio","idx","ToggleButton","type","variant","style","marginLeft","marginRight","checked","event","currentTarget","marginTop","Filter","Row","marginBottom","Col","md","htmlFor","InputGroup","FormControl","filter","toLowerCase","startsWith","target","Dashboard","selectedEmployees","setSelectedEmployees","Error","message","error","a","success","fail","fetch","response","json","data","App","setSemployees","fetching","setFetching","setError","useEffect","fetchEmployees","className","background","height","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43ec7619.chunk.js","sourcesContent":["import { Table } from \"react-bootstrap\";\nimport dateformat from \"dateformat\";\n\nexport default function EmployeeTable({ employees }) {\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th></th>\n          <th>ID</th>\n          <th>Last Name</th>\n          <th>First Name</th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Date Hired</th>\n          <th>Date of Birth</th>\n        </tr>\n      </thead>\n      <tbody>\n        {employees.map((employee, index) => (\n          <tr key={index}>\n            <td>\n              <img src={employee.picture.thumbnail} alt={employee.name} />\n            </td>\n            <td>{employee.id.value}</td>\n            <td>{employee.name.last}</td>\n            <td>{employee.name.first}</td>\n            <td>{employee.email}</td>\n            <td>{employee.phone}</td>\n            <td>{dateformat(new Date(employee.registered.date), \"mmmm dS, yyyy\")}</td>\n            <td>{dateformat(new Date(employee.dob.date), \"mmmm dS, yyyy\")}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}","import { useState } from 'react';\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\n\nconst SORT_KEYS = {\n  LAST_NAME: \"LAST_NAME\",\n  FIRST_NAME: \"FIRST_NAME\",\n  DATE_HIRED: \"DATE_HIRED\",\n  DATE_OF_BIRTH: \"DATE_OF_BIRTH\"\n};\nconst DIRECTION = {\n  ASCENDING: \"ASCENDING\",\n  DESCENDING: \"DESCENDING\"\n};\n\nexport default function Sort({ employees, onChange }) {\n  const radios = [\n    { name: \"Last Name\", value: SORT_KEYS.LAST_NAME },\n    { name: \"First Name\", value: SORT_KEYS.FIRST_NAME },\n    { name: \"Date Hired\", value: SORT_KEYS.DATE_HIRED },\n    { name: \"Date of Birth\", value: SORT_KEYS.DATE_OF_BIRTH }\n  ];\n  const [radioValue, setRadioValue] = useState(null);\n  const [direction, setDirection] = useState(DIRECTION.ASCENDING);\n  const sortEmployees = (sortKey, sortDirection = direction) => {\n    const sortFuncs = {\n      [SORT_KEYS.LAST_NAME]: () => onChange([...employees.sort((emp1, emp2) =>\n        sortDirection === DIRECTION.ASCENDING ? (emp1.name.last > emp2.name.last) : (emp1.name.last < emp2.name.last))]),\n      [SORT_KEYS.FIRST_NAME]: () => onChange([...employees.sort((emp1, emp2) =>\n        sortDirection === DIRECTION.ASCENDING ? (emp1.name.first > emp2.name.first) : (emp1.name.first < emp2.name.first))]),\n      [SORT_KEYS.DATE_HIRED]: () => onChange([...employees.sort((emp1, emp2) =>\n        sortDirection === DIRECTION.ASCENDING ? (new Date(emp1.registered.date) > new Date(emp2.registered.date)) :\n        (new Date(emp1.registered.date) < new Date(emp2.registered.date)))]),\n      [SORT_KEYS.DATE_OF_BIRTH]: () => onChange([...employees.sort((emp1, emp2) =>\n        sortDirection === DIRECTION.ASCENDING ? (new Date(emp1.dob.date) > new Date(emp2.dob.date)) :\n        (new Date(emp1.dob.date) < new Date(emp2.dob.date)))])\n    };\n\n    setDirection(sortDirection);\n    setRadioValue(sortKey);\n    sortFuncs[sortKey]();\n  };\n\n  return (\n    <>\n      <h4>Sort by:</h4>\n      <ButtonGroup toggle>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            variant=\"primary\"\n            name=\"radio\"\n            value={radio.value}\n            style={{ marginLeft: 5, marginRight: 5 }}\n            checked={radioValue === radio.value}\n            onChange={event => sortEmployees(event.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      {radioValue && (\n        <div style={{ marginTop: 5 }}>\n          <ButtonGroup toggle>\n            <ToggleButton\n              type=\"radio\"\n              variant=\"secondary\"\n              name=\"radio\"\n              value={DIRECTION.ASCENDING}\n              style={{ marginLeft: 5, marginRight: 5 }}\n              checked={direction === DIRECTION.ASCENDING}\n              onChange={event => sortEmployees(radioValue, event.currentTarget.value)}\n            >\n              Ascending\n            </ToggleButton>\n            <ToggleButton\n              type=\"radio\"\n              variant=\"secondary\"\n              name=\"radio\"\n              value={DIRECTION.DESCENDING}\n              style={{ marginLeft: 5, marginRight: 5 }}\n              checked={direction === DIRECTION.DESCENDING}\n              onChange={event => sortEmployees(radioValue, event.currentTarget.value)}\n            >\n              Descending\n            </ToggleButton>\n          </ButtonGroup>\n        </div>\n      )}\n    </>\n  );\n}","import { InputGroup, FormControl, Row, Col } from \"react-bootstrap\";\n\nexport default function Filter({ employees, onChange }) {\n  return (\n    <Row style={{ marginBottom: 5 }}>\n      <Col md={4} />\n      <Col md={4}>\n        <h4>\n          <label htmlFor=\"employee-filter-input\">Filter Employees by Name:</label>\n        </h4>\n        <InputGroup>\n          <FormControl\n            id=\"employee-filter-input\"\n            onChange={event => onChange([...employees.filter(({ name: { first, last }}) =>\n              first.toLowerCase().startsWith(event.target.value.toLowerCase()) ||\n              last.toLowerCase().startsWith(event.target.value.toLowerCase()))])\n            }\n          />\n        </InputGroup>\n      </Col>\n      <Col md={4} />\n    </Row>\n  )\n}","import { useState } from \"react\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport Sort from \"./Sort\";\nimport Filter from \"./Filter\";\n\nexport default function Dashboard({ employees }) {\n  const [selectedEmployees, setSelectedEmployees] = useState(employees);\n\n  return (\n    <>\n      <h1>Employees</h1>\n      <Sort employees={selectedEmployees} onChange={setSelectedEmployees} />\n      <Filter employees={employees} onChange={setSelectedEmployees} />\n      <EmployeeTable employees={selectedEmployees} />\n    </>\n  );\n}","export default function Error({ error: { message } }) {\n  return (\n    <>\n      {message}\n    </>\n  );\n}","import { useEffect, useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport Error from \"./Error\";\nimport \"./App.css\";\n\nasync function fetchEmployees({ success, fail }) {\n  try {\n    const response = await fetch(\"https://randomuser.me/api/?results=100\");\n    const data = await response.json();\n\n    if(data.error)\n      fail(data.error);\n    else\n      success(data);\n  } catch(error) {\n    fail(error);\n  }\n}\n\nfunction App() {\n  const [employees, setSemployees] = useState(null);\n  const [fetching, setFetching] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if(!employees) {\n      setFetching(true);\n      fetchEmployees({\n        success: data => {\n          setSemployees(data);\n          setFetching(false);\n          setError(null);\n        },\n        fail: () => {\n          setError({ message: \"Unable to fetch employees\" });\n          setFetching(false);\n        }\n      });\n    }\n  }, [employees]);\n\n  return (\n    <div className=\"App\">\n      <div style={{\n        background: \"linear-gradient(180deg, rgba(255,198,181,1) 30%, rgba(110,202,175,1) 100%, rgba(159,238,126,0.6223623238357843) 100%)\",\n        height: \"100px\"\n      }}>\n        <h1>Employee Dashboard</h1>\n      </div>\n      {error && <Error error={error} />}\n      {fetching && \"fetching...\"}\n      {employees && <Dashboard employees={employees.results} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}